<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- VO 클래스 생성 -->
	<bean id="report" class="com.koitt.model.Report" scope="prototype" />

	<!-- ItemReader 빈 생성 -->
	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="record" />
		<property name="resource" value="file:c:/sample/ex04/report.xml" />
		<property name="unmarshaller" ref="reportUnmarshaller" />
	</bean>

	<!-- UnMarshaller xml -> VO 변환 -->
	<bean id="reportUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.koitt.model.Report</value>
			</list>
		</property>
	</bean>

	<!-- ItemWriter 생성 -->
	<bean id="mysqlItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
	 			<![CDATA[
	 				INSERT INTO report(refId, name, age, dob, income) 
	 				VALUES (:refId, :name, :age, :dob, :income)
	 			]]>
			</value>
		</property>
		<!-- 객체의 필드명과 sQL의 name 파라미터(콜론+객체필드명) 사이를 자동으로 연결(Mapping) 시켜줌 -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
	
	<!-- Batch Job 빈 생성 -->
	<batch:job id="xmlToMySqlJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="xmlItemReader"
					writer="mysqlItemWriter" commit-interval="2"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
</beans>
